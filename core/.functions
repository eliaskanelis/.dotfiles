###############################################################################
# Configs
#

# Set default browser
export BROWSER=$(command -v firefox)

# Development
export CPPUTEST_HOME="${HOME}/opt/cpputest/"
export PC_LINT_DIR="${HOME}/opt/Pc-lint"
export PATH=${HOME}/opt/gcc-arm-none-eabi/bin:$PATH''

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Load wal colors if they exist
if [[ -f "${HOME}/.cache/wal/colors.sh" ]]; then
    . "${HOME}/.cache/wal/colors.sh"
fi

# Gtk???
export GTK2_RC_FILES=${HOME}/.gtkrc-2.0

# Python startup script
export PYTHONSTARTUP=~/.pythonrc

# NPM Global for user
export PATH=~/.npm-global/bin:$PATH

# Dockerhub user
export DOCKER_USER="tedicreations"

# enable color support of ls and also add handy aliases
#if [ -x /usr/bin/dircolors ]; then
#test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
#fi


###############################################################################
# Functions
#

# My custom cd
# Automatic virtual environment
function cd() {
    if [[ -d ./.venv ]] ; then
	if command -v deactivate &> /dev/null
	then
            deactivate
	fi
    fi

    builtin cd "$@"

    if [[ -d ./.venv ]] ; then
	. ./.venv/bin/activate

	# Autocompletion for invoke
	if command -v invoke &> /dev/null
	then
	    MY_SHELL=$(ps -T $$ | awk 'NR==2{print $NF}')
            source <(invoke --print-completion-script="${MY_SHELL}" 2> /dev/null)
	fi

	# Autocompletion for macrame
	if command -v macrame &> /dev/null
	then
	    MY_SHELL=$(ps -T $$ | awk 'NR==2{print $NF}')
	    source <(macrame --print_shell_completion_script="${MY_SHELL}")
	fi
    fi
}

# Create a sandbox to play
sandbox() {
    # NAME=${RANDOM}
    NAME=$(shuf -n1 /usr/share/dict/words | sed -e 's/[^A-Za-z0-9._-]/_/g')

    rm -rf   /tmp/gimme_playground/${NAME}
    mkdir -p /tmp/gimme_playground/${NAME}
    cd       /tmp/gimme_playground/${NAME}
    virt
    cd       /tmp/gimme_playground/${NAME}
}

# This is a better less with color output.
es() {
    highlight --force --out-format=ansi "$1" | less -r
}


########################################################
# Ssh agent ############################################
#
#

SSH_ENV="$HOME/.ssh/environment"

function start_agent {
    echo "Initialising new SSH agent..."
    /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
    chmod 600 "${SSH_ENV}"
    . "${SSH_ENV}" > /dev/null
    /usr/bin/ssh-add;
}

# Source SSH settings, if applicable

if [ -f "${SSH_ENV}" ]; then
    . "${SSH_ENV}" > /dev/null
    #ps ${SSH_AGENT_PID} doesn't work under cywgin
    ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
	start_agent;
    }
else
    start_agent;
fi


########################################################
# Git ##################################################
#
#

# Git status
function gs {
    isGitRepo=$(git rev-parse --git-dir 2> /dev/null)
    if [ ! -z "${isGitRepo}" ]; then
	git s
    else
	echo "Not a repository"
    fi
}

# Git commit
function gc {
    isGitRepo=$(git rev-parse --git-dir 2> /dev/null)
    if [ ! -z "${isGitRepo}" ]; then
	git ci
    else
	echo "Not a repository"
    fi
}


########################################################
# Docker  ##############################################
#
#

# Docker cleaup
function dc {
    docker images --filter="dangling=true" --quiet --no-trunc | xargs -r docker rmi --force
    docker volume ls --filter="dangling=true" --quiet | xargs -r docker volume rm
}

function devtools {
    local args="$*"
    if [ $# -eq 0 ]; then
        args=
    fi

    docker run --rm --interactive --tty --volume ${PWD}:/workdir devtools ${args}
}
